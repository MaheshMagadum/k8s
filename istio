Traffic Splitting for Canary Deployments

Purpose: The weight option allows you to split traffic between different versions of a service. For example, during a canary deployment, you may want to route 90% of the traffic to your stable version and 10% to the canary version to test its performance and stability before fully rolling it out.Usage: By assigning weights to services or service subsets, you can control how much traffic each version receives.Example:Service A (Stable): 90% of traffic.Service B (Canary): 10% of traffic.In a service mesh like Istio, you might configure traffic splitting like this:

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-service
spec:
  hosts:
    - my-service
  http:
    - route:
        - destination:
            host: my-service
            subset: v1
          weight: 90
        - destination:
            host: my-service
            subset: v2
          weight: 10