>kubectl taint nodes <node-name> dedicated=critical:NoSchedule
:OR:
apiVersion: v1
kind: Node
metadata:
  name: node1
spec:
  taints:
    - key: "dedicated"
      value: "critical"
      effect: "NoSchedule"

Now:
apiVersion: v1
kind: Pod
metadata:
  name: critical-app
spec:
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "critical"
      effect: "NoSchedule" or "NoExecute"
  containers:
    - name: app-container
      image: nginx

-------------------------------

kubectl taint nodes <node-name> team=data-science:NoSchedule

apiVersio: v1
kind: Pod
metadata:
   name: process-data
spec:
 containers:
 - name: data-app
   image: <imageurl>
 tolerations:
   - key: "team"
     Operator: "Equal"
     value: "data-process'
     effect: NoSchedule
----------------------------

NoSchedule: New pods without tolerations will not be scheduled on the node.

PreferNoSchedule: New pods without tolerations will try to avoid being scheduled on the node but may be placed there if needed.

NoExecute: Existing pods will be evicted from the node if they don't have a matching toleration.

--------------------------
Use Cases:

- Isolate Dedicated Workloads

- you may have specialized hardware resources (e.g., GPUs or high-memory nodes) or configurations optimized for certain workloads.

-Prevent Scheduling on Specific Nodes: Some nodes might be reserved for maintenance, batch processing, or non-interruptible jobs.

- Dedicated System Nodes: Use a taint on these nodes and ensure that only system pods with matching tolerations are scheduled there.

- Maintenance or Draining Nodes: Apply a taint to the node to prevent new pods from being scheduled, and the existing pods will be evicted (if configured to do so).

- Handling Node Conditions( unhealthy nodes): Kubernetes automatically taints such nodes, and you can configure your pods to tolerate specific conditions if they are capable of running under such scenarios

- Compliance and Security Policies enforcement: Certain nodes might be hardened or compliant with security standards (e.g., PCI-DSS), and only specific workloads should be allowed.

